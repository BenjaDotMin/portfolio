@import "../mixins.scss";

.ortho__block{              
    background-color: #f1f1f1;  
       
    &:after, &:before, .ortho__shadow, .ortho__sides:after, .ortho__sides:before{
        content: "";                   
        width: 100%;
        height: 100%;    
        background-color: #ddd;   
        position: absolute;   
    }             
    
    //rotate the sides independantly   
    &:before{transform-origin: bottom; transform: rotateX(90deg); top: -100%; background: #f9f9f9;} //top

    &:after{transform-origin: top;transform: rotateX(-90deg); top: 100%;} //bottom   
    
    .ortho__sides{     
        &.back{ 
            width: 100%; height: 100%; background-color: #ddd; position: absolute; transform-style: preserve-3d; transform: translateZ(-200px); //match parent width
           
            &:before{transform: rotateY(-90deg) translateX(200px);} //left   
            &:after{transform: rotateY(90deg) translateX(-200px);}//right
        }               
                     
        &:before{ //left
            transform-origin: right;
            transform: rotateY(-90deg);
            left: -100%;
        }
        
        &:after{ //right
            transform-origin: left;          
            transform: rotateY(90deg);
            right: -100%; 
        }
    }

    .ortho__shadow{                            
        transform: rotateX(90deg);    
        bottom:-1px;
        transform-origin: bottom;         
        background: #c7c7c7;
        box-shadow: 0px 0px 351px #000000a6;    
        
        //mess with position for direction shadow    
        &.right{            
            background: #d7d7d7;      
            left:100%;
            opacity: 0.55;
        }

        &.left{            
            background: #d7d7d7;      
            left:-100%;
            opacity: 0.55;
        }

        &.front{            
            background: #d7d7d7;      
            transform: translateZ(200px) rotateX(90deg);
            opacity: 0.55;
        }
    }            

    &.rounded{
        border-radius: 7px;                
        //add to 100% to get even gradient either side (5, 95)
        background: linear-gradient(90deg, #ddd 0%, #f1f1f1 5%, #f1f1f1 95%, #ddd 100%);  
                                
        &:after, &:before, .ortho__sides, .ortho__sides:after, .ortho__sides:before{
            border-radius: inherit; 
        }   
    }
    
    &.plus{&.cross{transform: rotateY(-48deg) rotateZ(45deg);}}          

    &.tick, &.tick .ortho__block{ //itself and inner ortho__block
        height: 40px;               
        
        &:before{ //top
            height: 40px; 
            top: -40px;                     
        }  

        &:after{ //bottom          
            height: 40px; 
        } 

        .ortho__sides{  
            //&.back{transform: translateZ(-40px);}  

            &:before{
                width: 40px;
                left: -40px;
            }  

            &:after{
                width: 40px;    
                right: -40px;   
            }                                       
        }  

        .ortho__block{   
            transform-origin: right;
            transform: rotateZ(90deg) translateY(30px) translateX(-20px); 
            width: 25%;                   
        }
    }    

    &.tick{transform: rotateY(-48deg) rotateZ(-45deg);} 
    
    
    &:nth-child(3){
        @include blockSize(38, 5.2, 20); //w/h/d
        @include orthoPosition(-24, -16); //x/y/z
        &:after{
            //box-shadow: 50px -50px 110px 0px rgba(0, 0, 0, 0.32);
            //box-shadow: 50px 0px 110px 30px rgba(0, 0, 0, 0.22);
            //box-shadow: 120px -120px 190px 20px rgba(0, 0, 0, 0.30);            
        }
    }

    &:nth-child(4){
        @include blockSize(20, 30, 1.2);
        @include orthoPosition(-29, -22);
        &:after{
            //box-shadow: 3px 7px 36px 5px rgba(0, 0, 0, 0.12);          
        }
    }

    &:nth-child(5){
        @include blockSize(38, 5.2, 20); //w/h/d
        @include orthoPosition(-24, -16); //x/y/z
    }
}